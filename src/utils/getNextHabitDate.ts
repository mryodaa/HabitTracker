import {Habit} from '../data/types';

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –¥–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
 * @param habit –ø—Ä–∏–≤—ã—á–∫–∞
 */
export function getNextHabitDate(habit: Habit): Date | null {
  const today = new Date();
  today.setHours(0, 0, 0, 0); // –æ–±–Ω—É–ª—è–µ–º –≤—Ä–µ–º—è
  const currentDay = today.getDay(); // 0 ‚Äî –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 6 ‚Äî —Å—É–±–±–æ—Ç–∞

  // üìÖ –ö–∞–∂–¥–æ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
  if (habit.frequency === 'everyday') {
    const next = new Date(today);
    next.setDate(today.getDate() + 1);
    return next;
  }

  // üìÖ –ë—É–¥–Ω–∏–µ –¥–Ω–∏ (–ü–Ω‚Äì–ü—Ç)
  if (habit.frequency === 'weekdays') {
    let next = new Date(today);
    for (let i = 1; i <= 7; i++) {
      next.setDate(today.getDate() + i);
      const day = next.getDay();
      if (day >= 1 && day <= 5) return next;
    }
  }

  // üìÖ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ (custom)
  if (habit.frequency === 'custom' && habit.customDays?.length) {
    let next = new Date(today);
    for (let i = 1; i <= 7; i++) {
      next.setDate(today.getDate() + i);
      const day = next.getDay(); // 0 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ ... 6 = —Å—É–±–±–æ—Ç–∞
      if (habit.customDays.includes(day)) return next;
    }
  }

  return null;
}
